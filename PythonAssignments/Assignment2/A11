
data type:

• Variables are the basic unit of storage for a
program.
• Variables can be created and destroyed.
• At a hardware level, a variable is a reference to a
location in memory.
• Programs perform operations on variables and
alter or fill in their values.
• Objects are higher level constructs that include
one or more variables and the set of operations
that work on these variables.
• An object can therefore be considered a more
complex variable.

Numbers:
    Integers, floating point numbers and complex numbers falls under Python numbers category. They are defined as int,
    float and complex class in Python.We can use the type() function to know which class a variable or a value belongs
     to and the isinstance() function to check if an object belongs to a particular class.
List:
    List is an ordered sequence of items. It is one of the most used datatype in Python and is very flexible. All the items
    in a list do not need to be of the same type.
    It is defined within parentheses [] where items are separated by commas.
    ex:
     a = [1, 2.2, 'python']
Tuple:
    Tuple is an ordered sequence of items same as list.The only difference is that tuples are immutable. Tuples once
    created cannot be modified.
    It is defined within parentheses () where items are separated by commas.
    ex:
     t = (5,'program', 1+3j)
String:
    String is sequence of Unicode characters. We can use single quotes or double quotes to represent strings.
     Multi-line strings can be denoted using triple quotes, ''' or """.
    ex:
    s = "This is a string"
    s = '''a multiline
Set:
    Set is an unordered collection of unique items. Set is defined by values separated by comma inside braces { }.
    Items in a set are not ordered.
    ex:
    a = {5,2,3,1,4}
Dictionary:
    It is generally used when we have a huge amount of data. Dictionaries are optimized for retrieving data. We must
    know the key to retrieve the value.In Python, dictionaries are defined within braces {} with each item being a
     pair in the form key:value. Key and value can be of any type.
     ex:
      d = {1:'value','key':2}